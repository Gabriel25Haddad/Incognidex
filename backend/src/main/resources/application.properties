spring.application.name=base
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# =======================================================
# CONFIGURAÇÃO DO BANCO DE DADOS REMOTO (HOSTGATOR)
# =======================================================
# URL de conexão JDBC para o banco de dados HostGator
# Formato: jdbc:mysql://<HOST>:<PORTA>/<NOME_DO_BANCO>

spring.datasource.url={{JDBC_DATABASE_URL}}
# Usuário do banco de dados criado na HostGator
spring.datasource.username={{JDBC_DATABASE_USERNAME}}
# Senha do usuário do banco de dados
# Senha que você definiu para este usuário
spring.datasource.password={{JDBC_DATABASE_PASSWORD}}

# Aumenta o tempo limite de conexão de 3s para 30s para evitar o "Connection attempt exceeded defined timeout."
spring.datasource.hikari.connection-timeout=30000

# Define o máximo de vida da conexão para 4 minutos.
# ISSO É CRUCIAL para garantir que o Hikari recicle a conexão ANTES do servidor MySQL a feche.
spring.datasource.hikari.max-lifetime=240000

# Mantém o idle-timeout em 5 minutos (300 segundos) para conexões ociosas.
spring.datasource.hikari.idle-timeout=300000

# Mantém o pool size e o idle nos valores padrão que você definiu
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
# =======================================================
# CONFIGURAÇÃO DO HIBERNATE (JPA)
# =======================================================

# A propriedade ddl-auto=update permite que o Hibernate atualize o schema
# do banco de dados (crie tabelas, etc.) automaticamente com base nas suas entidades.
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=incognidexhub@gmail.com
spring.mail.password={{EMAIL_APP_PASSWORD}}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

